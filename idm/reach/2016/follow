#!/bin/bash

# print a progress bar over the last printed line
# ARGS
#  1 - full number
#  2 - current number
__bar() {
  # Process data
  total=$1
  left=$2
  _progress=$(( (total-left)*100/total ))
  _done=$(( (_progress*4)/10 ))
  _left=$(( 40 - _done ))
  # Build progressbar string lengths
  _fill=$(printf "%${_done}s")
  _empty=$(printf "%${_left}s")

  # 1.2 Build progressbar strings and print the ProgressBar line
  # 1.2.1 Output example:                           
  # 1.2.1.1 Progress : [########################################] 100%
  printf "\r [${_fill// /#}${_empty// /-}] ${left} / ${total}"
}

__num_user_jobs() {
  squeue -r -u $USER | grep -c $USER 
}

# wait until $USER has no jobs in squeue
swait() {
  # pause to allow squeue to catch up
  num=$(__num_user_jobs)
  __bar $1 ${num}
  while (( num > 0 )); do
    sleep 20
    num=$(__num_user_jobs)
    __bar $1 ${num}
  done
  printf "\n"
}

swait 50
